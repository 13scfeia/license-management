name: Mirror Users with Team

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight
  workflow_dispatch: # Allows manual trigger

jobs:
  mirror-users:
    runs-on: ubuntu-latest
    steps:
      # This step sets up Node.js version 20
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      # This step installs the @octokit/action npm package
      - run: npm install @octokit/action@6.1.0
      # This step gets a GitHub App installation access token
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}   
      
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read users.json
        id: read-users
        run: |
          users=$(jq -r 'keys[]' users.json)
          echo "::set-output name=users::$users"

      - name: Get team members
        id: get-team-members
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }} 
        with:
          script: |
            const team = await github.teams.listMembersInOrg({
              org: context.repo.owner,
              team_slug: 'test123'
            });
            return team.data.map(member => member.login);

      - name: Sync team members
        uses: actions/github-script@v7
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }} 
        with:
          script: |
            const users = '${{ steps.read-users.outputs.users }}'.split(' ');
            const teamMembers = ${{ steps.get-team-members.outputs.result }};
            
            // Add missing users to the team
            for (const user of users) {
              if (!teamMembers.includes(user)) {
                await github.teams.addOrUpdateMembershipForUserInOrg({
                  org: context.repo.owner,
                  team_slug: 'test123',
                  username: user
                });
              }
            }

            // Remove users not in the list
            for (const member of teamMembers) {
              if (!users.includes(member)) {
                await github.teams.removeMembershipForUserInOrg({
                  org: context.repo.owner,
                  team_slug: 'test123',
                  username: member
                });
              }
            }